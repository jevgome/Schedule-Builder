"use strict";
/*
 * Copyright (c) 2021 ILEFA Labs
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published
 * by the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
var __read = (this && this.__read) || function (o, n) {
    var m = typeof Symbol === "function" && o[Symbol.iterator];
    if (!m) return o;
    var i = m.call(o), r, ar = [], e;
    try {
        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
    }
    catch (error) { e = { error: error }; }
    finally {
        try {
            if (r && !r.done && (m = i["return"])) m.call(i);
        }
        finally { if (e) throw e.error; }
    }
    return ar;
};
var __spreadArray = (this && this.__spreadArray) || function (to, from) {
    for (var i = 0, il = from.length, j = to.length; i < il; i++, j++)
        to[j] = from[i];
    return to;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
var fs_1 = __importDefault(require("fs"));
var yesno_1 = __importDefault(require("yesno"));
var axios_1 = __importDefault(require("axios"));
var cheerio_1 = __importDefault(require("cheerio"));
var progress_1 = __importDefault(require("progress"));
var cheerio_tableparser_1 = __importDefault(require("cheerio-tableparser"));
var ContentArea;
(function (ContentArea) {
    ContentArea["CA1"] = "CA1";
    ContentArea["CA2"] = "CA2";
    ContentArea["CA3"] = "CA3";
    ContentArea["CA4"] = "CA4";
    ContentArea["CA4INT"] = "CA4INT";
})(ContentArea || (ContentArea = {}));
var DEFAULT_PREREQS = 'There are no prerequisites for this course.';
var DEFAULT_DESC = 'There is no description provided for this course.';
var generateCourseMappings = function () { return __awaiter(void 0, void 0, void 0, function () {
    var start, $, courses, table, existing, cont, date, remoteCourses_1, delta, bar, i, row, res, course;
    return __generator(this, function (_a) {
        switch (_a.label) {
            case 0:
                console.log('[*] Preparing to generate mappings..');
                start = Date.now();
                return [4 /*yield*/, axios_1.default
                        .get('https://catalog.uconn.edu/course-search/')
                        .then(function (res) { return res.data; })
                        .then(function (res) { return cheerio_1.default.load(res); })
                        .catch(function (_) { return null; })];
            case 1:
                $ = _a.sent();
                if (!$)
                    return [2 /*return*/, console.error('Failed to retrieve data from the web.')];
                cheerio_tableparser_1.default($);
                courses = [];
                table = $('.tablesorter').parsetable();
                if (!fs_1.default.existsSync('./courses.json')) return [3 /*break*/, 4];
                existing = JSON.parse(fs_1.default.readFileSync('./courses.json', { encoding: 'utf8' }));
                if (!(table[3].length === existing.length)) return [3 /*break*/, 3];
                return [4 /*yield*/, yesno_1.default({ question: '[*] Catalog response has the same amount of entries as your existing mappings, continue?' })];
            case 2:
                cont = _a.sent();
                if (!cont)
                    return [2 /*return*/];
                _a.label = 3;
            case 3:
                date = Date.now();
                console.log("[*] Existing mappings saved to [courses-" + date + ".json]");
                console.log("[*] Remote: " + table[3].length + ", local: " + existing.length + ", delta: " + (table[3].length - existing.length));
                remoteCourses_1 = table[3].slice(1).map(function (val, i) { return "" + val + table[4][i]; });
                delta = existing.filter(function (course) { return !remoteCourses_1.find(function (val) { return val === course.name; }); });
                courses = __spreadArray([], __read(delta));
                console.log("[*] Imported " + delta.length.toLocaleString() + " legacy course mappings.");
                fs_1.default.copyFileSync('./courses.json', "./courses-" + date + ".json");
                _a.label = 4;
            case 4:
                console.log("[*] Ready to generate mappings for " + table[3].length.toLocaleString() + " courses.");
                bar = new progress_1.default(':course [:bar] :rate/rps :etas (:current/:total) (:percent done)', {
                    complete: '=',
                    incomplete: ' ',
                    width: 20,
                    total: table[3].length
                });
                i = 1;
                _a.label = 5;
            case 5:
                if (!(i < table[3].length)) return [3 /*break*/, 8];
                row = assembleRow(table, i);
                return [4 /*yield*/, lookup(row.subject, row.number.toString())];
            case 6:
                res = _a.sent();
                if (!res) {
                    res = {
                        credits: NaN.toString(),
                        desc: 'Unavailable',
                        grading: 'Unavailable',
                        prereqs: 'Unavailable'
                    };
                }
                course = {
                    name: row.subject + row.number,
                    catalogName: row.name,
                    catalogNumber: row.number,
                    prerequisites: res.prereqs,
                    attributes: {
                        lab: hasCompetency(row, 'CA3LAB'),
                        writing: hasCompetency(row, 'COMPW'),
                        quantitative: hasCompetency(row, 'COMPQ'),
                        environmental: hasCompetency(row, 'COMPE'),
                        contentAreas: row
                            .attrib
                            .map(function (attrib) { return attrib === 'CA3LAB'
                            ? 'CA3'
                            : attrib; })
                            .filter(function (attrib) { return attrib.startsWith('CA'); })
                            .map(function (attrib) { return ContentArea[attrib.toUpperCase()]; }),
                        graduate: false
                    },
                    credits: parseInt(res.credits),
                    grading: res.grading,
                    description: res.desc,
                };
                bar.tick({
                    course: ((i + 1) >= table[3].length)
                        ? 'done'
                        : table[3][i + 1] + table[4][i + 1]
                });
                courses.push(course);
                _a.label = 7;
            case 7:
                i++;
                return [3 /*break*/, 5];
            case 8:
                fs_1.default.writeFileSync('./courses.json', JSON.stringify(courses.sort(function (a, b) { return a.name.localeCompare(b.name); }), null, 3));
                console.log("\n[*] Finished generating mappings for " + courses.length + " courses in " + getLatestTimeValue(Date.now() - start) + ".");
                return [2 /*return*/];
        }
    });
}); };
var lookup = function (prefix, number) { return __awaiter(void 0, void 0, void 0, function () {
    var target, res, $, grading, credits, prereqs, parts, desc;
    return __generator(this, function (_a) {
        switch (_a.label) {
            case 0:
                target = "https://catalog.uconn.edu/directory-of-courses/course/" + prefix + "/" + number + "/";
                return [4 /*yield*/, axios_1.default
                        .get(target)
                        .then(function (res) { return res.data; })
                        .catch(function (_) { return null; })];
            case 1:
                res = _a.sent();
                if (!res) {
                    return [2 /*return*/, null];
                }
                $ = cheerio_1.default.load(res);
                grading = $('.grading-basis')
                    .text()
                    .trim()
                    .split('Grading Basis: ')[1] || 'Graded';
                credits = $('.credits')
                    .text()
                    .trim() === 'Zero credits'
                    ? "0"
                    : $('.credits')
                        .text()
                        .trim()
                        .split(' ')[0] || 'Unknown Credits';
                prereqs = $('.prerequisites').text() || DEFAULT_PREREQS;
                if (prereqs && prereqs !== DEFAULT_PREREQS) {
                    parts = prereqs
                        .trim()
                        .split(/Prerequisite(?:s){0,1}\:\s/);
                    prereqs = parts.length === 1 ? parts[0] : parts[1];
                    if (prereqs.includes('None.'))
                        prereqs = DEFAULT_PREREQS;
                    if (prereqs.includes('Recommended Preparation'))
                        prereqs = prereqs.split('Recommended Preparation')[0].trim();
                }
                desc = $('.description').text() || DEFAULT_DESC;
                return [2 /*return*/, { grading: grading, credits: credits, prereqs: prereqs, desc: desc }];
        }
    });
}); };
var hasCompetency = function (row, competency) {
    return row
        .attrib
        .some(function (attrib) { return attrib === competency.toUpperCase(); });
};
var assembleRow = function (res, index) {
    var payload = {};
    var filtered = [
        {
            index: 1,
            name: 'href',
            apply: function (raw) { return cheerio_1.default
                .load(raw.trim())('a')
                .attr('href'); }
        },
        {
            index: 3,
            name: 'subject'
        },
        {
            index: 4,
            name: 'number',
        },
        {
            index: 5,
            name: 'name'
        },
        {
            index: 6,
            name: 'attrib',
            apply: function (raw) {
                var $ = cheerio_1.default.load(raw);
                var k = '';
                $('a').each(function (i) {
                    k += $("a:nth-child(" + (i + 1) + ")").text() + ' ';
                });
                return (k && k.length)
                    ? k.trim().split(' ')
                    : [];
            }
        }
    ];
    filtered.forEach(function (ent) { return payload[ent.name] = ent.apply
        ? ent.apply(res[ent.index][index])
        : res[ent.index][index]; });
    return payload;
};
var getLatestTimeValue = function (time) {
    var sec = Math.trunc(time / 1000) % 60;
    var min = Math.trunc(time / 60000 % 60);
    var hrs = Math.trunc(time / 3600000 % 24);
    var days = Math.trunc(time / 86400000 % 30.4368);
    var mon = Math.trunc(time / 2.6297424E9 % 12.0);
    var yrs = Math.trunc(time / 3.15569088E10);
    var y = yrs + "y";
    var mo = mon + "mo";
    var d = days + "d";
    var h = hrs + "h";
    var m = min + "m";
    var s = sec + "s";
    var result = '';
    if (yrs !== 0)
        result += y + ", ";
    if (mon !== 0)
        result += mo + ", ";
    if (days !== 0)
        result += d + ", ";
    if (hrs !== 0)
        result += h + ", ";
    if (min !== 0)
        result += m + ", ";
    result = result.substring(0, Math.max(0, result.length - 2));
    if ((yrs !== 0 || mon !== 0 || days !== 0 || min !== 0 || hrs !== 0) && sec !== 0) {
        result += ', ' + s;
    }
    if (yrs === 0 && mon === 0 && days === 0 && hrs === 0 && min === 0) {
        result += s;
    }
    return result.trim();
};
generateCourseMappings();
//# sourceMappingURL=mappings.js.map