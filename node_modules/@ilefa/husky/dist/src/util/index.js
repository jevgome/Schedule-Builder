"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.getCatalogUrl = exports.isCampusType = exports.detectCampusBySection = void 0;
__exportStar(require("./types"), exports);
__exportStar(require("./building"), exports);
/**
 * Attempts to guess what campus a certain
 * section is being taught at.
 *
 * Notice: This method will not always work,
 * as off-campus courses and Storrs courses
 * both do not have alphabetic prefixes, and
 * just start with a the section number.
 *
 * @param section the section name
 */
var detectCampusBySection = function (section) {
    switch (section.substring(0, 1).toLowerCase()) {
        case 'h':
            return 'hartford';
        case 'z':
            return 'stamford';
        case 'w':
            return 'waterbury';
        case 'n':
            return 'avery_point';
        default:
            return 'storrs';
    }
};
exports.detectCampusBySection = detectCampusBySection;
/**
 * Returns whether or not the provided campus
 * is a valid member of the {@link CampusType} type.
 *
 * @param input the inputted campus
 */
var isCampusType = function (input) {
    var lower = input.toLowerCase();
    return lower === 'any'
        || lower === 'storrs'
        || lower === 'hartford'
        || lower === 'stamford'
        || lower === 'waterbury'
        || lower === 'avery_point';
};
exports.isCampusType = isCampusType;
var getCatalogUrl = function (prefix, number) {
    var num = parseInt(number.replace(/[^0-9]/g, ''));
    if (num > 5000 && (prefix !== 'PHRX' || (prefix === 'PHRX' && num < 5199)))
        return "https://gradcatalog.uconn.edu/course-descriptions/course/" + prefix + "/" + number + "/";
    return "https://catalog.uconn.edu/directory-of-courses/course/" + prefix + "/" + (number.length === 3 ? ' ' + number : number) + "/";
};
exports.getCatalogUrl = getCatalogUrl;
//# sourceMappingURL=index.js.map