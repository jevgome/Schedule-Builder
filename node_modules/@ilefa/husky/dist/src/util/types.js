"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.SearchParts = exports.LectureCaptureType = exports.BoardType = exports.TechType = exports.SeatingType = exports.ClassroomConferenceType = exports.UConnServiceStatus = exports.UConnService = exports.GradingTypeNames = exports.ContentAreaNames = exports.ContentArea = void 0;
var ContentArea;
(function (ContentArea) {
    ContentArea["CA1"] = "CA1";
    ContentArea["CA2"] = "CA2";
    ContentArea["CA3"] = "CA3";
    ContentArea["CA4"] = "CA4";
    ContentArea["CA4INT"] = "CA4INT";
})(ContentArea = exports.ContentArea || (exports.ContentArea = {}));
var ContentAreaNames;
(function (ContentAreaNames) {
    ContentAreaNames["CA1"] = "Arts and Humanities";
    ContentAreaNames["CA2"] = "Social Sciences";
    ContentAreaNames["CA3"] = "Science and Technology";
    ContentAreaNames["CA4"] = "Diversity and Multiculturalism";
    ContentAreaNames["CA4INT"] = "Diversity and Multiculturalism (International)";
})(ContentAreaNames = exports.ContentAreaNames || (exports.ContentAreaNames = {}));
var GradingTypeNames;
(function (GradingTypeNames) {
    GradingTypeNames["GRADED"] = "Graded";
    GradingTypeNames["SATISFACTORY_UNSATISFACTORY"] = "S/U";
    GradingTypeNames["HONORS_CREDIT"] = "Honors";
    GradingTypeNames["REGISTERED"] = "Registered";
})(GradingTypeNames = exports.GradingTypeNames || (exports.GradingTypeNames = {}));
var UConnService;
(function (UConnService) {
    UConnService["AURORA"] = "Aurora";
    UConnService["EMAIL"] = "Email";
    UConnService["HUSKYCT"] = "HuskyCT";
    UConnService["KFS"] = "KFS";
    UConnService["NETID"] = "NetID";
    UConnService["NETWORK"] = "Network";
    UConnService["STUDENT_ADMIN"] = "Student Admin";
    UConnService["WEBEX"] = "Webex";
    UConnService["UNKNOWN"] = "Unknown";
})(UConnService = exports.UConnService || (exports.UConnService = {}));
var UConnServiceStatus;
(function (UConnServiceStatus) {
    UConnServiceStatus["OPERATIONAL"] = "Operational";
    UConnServiceStatus["REPORTING"] = "Reporting";
    UConnServiceStatus["DEGRADED"] = "Degraded";
    UConnServiceStatus["OUTAGE"] = "Outage";
    UConnServiceStatus["UNKNOWN"] = "Unknown";
})(UConnServiceStatus = exports.UConnServiceStatus || (exports.UConnServiceStatus = {}));
var ClassroomConferenceType = /** @class */ (function () {
    function ClassroomConferenceType(key, name, attributes) {
        var _this = this;
        this.key = key;
        this.name = name;
        this.attributes = attributes;
        this.toString = function () { return _this.key; };
    }
    ClassroomConferenceType.FULL = new ClassroomConferenceType('FULL', 'Full Video Conference', {
        shareContent: true,
        instructorFacingCamera: true,
        studentFacingCamera: true,
        presentMediaFrontOfRoom: true,
        presentMediaBackOfRoom: true,
        instructorMicrophone: true,
        studentMicrophone: true,
        connectToWebex: true
    });
    ClassroomConferenceType.TEACH_FROM = new ClassroomConferenceType('TEACH_FROM', 'Teach From Video Conference', {
        shareContent: true,
        instructorFacingCamera: true,
        studentFacingCamera: false,
        presentMediaFrontOfRoom: false,
        presentMediaBackOfRoom: true,
        instructorMicrophone: true,
        studentMicrophone: false,
        connectToWebex: true
    });
    ClassroomConferenceType.SEMINAR = new ClassroomConferenceType('SEMINAR', 'Seminar Video Conference', {
        shareContent: true,
        instructorFacingCamera: true,
        studentFacingCamera: false,
        presentMediaFrontOfRoom: true,
        presentMediaBackOfRoom: false,
        instructorMicrophone: true,
        studentMicrophone: true,
        connectToWebex: true
    });
    ClassroomConferenceType.NONE = new ClassroomConferenceType('NONE', 'None', {
        shareContent: false,
        instructorFacingCamera: false,
        studentFacingCamera: false,
        presentMediaFrontOfRoom: false,
        presentMediaBackOfRoom: false,
        instructorMicrophone: false,
        studentMicrophone: false,
        connectToWebex: false
    });
    ClassroomConferenceType.fromString = function (input) {
        var valid = ['FULL', 'TEACH_FROM', 'SEMINAR'];
        if (valid.some(function (v) { return input.toLowerCase() === v; }))
            return ClassroomConferenceType[input.toUpperCase()];
        return valid
            .map(function (v) { return ClassroomConferenceType[v]; })
            .map(function (ent) {
            var k = ent;
            if (k.name.toLowerCase() === input.toLowerCase())
                return k;
        })
            .filter(function (ent) { return !!ent; })
            .map(function (_a) {
            var name = _a.name, attributes = _a.attributes;
            return ({ name: name, attributes: attributes });
        })[0];
    };
    return ClassroomConferenceType;
}());
exports.ClassroomConferenceType = ClassroomConferenceType;
var SeatingType;
(function (SeatingType) {
    SeatingType["TABLES"] = "Tables";
    SeatingType["TABLES_AND_ARMCHAIRS"] = "Tables and Tablet Armchairs";
    SeatingType["TABLET_ARMCHAIRS"] = "Tablet Armchairs";
    SeatingType["FIXED_AUDITORIUM"] = "Fixed/Auditorium";
    SeatingType["FIXED_TABLES"] = "Fixed Seating Tables";
    SeatingType["FIXED_LEVELED_TABLES"] = "Fixed Tier Leveled Tables";
    SeatingType["LAB_TABLES"] = "Lab Tables and Chairs";
    SeatingType["ACTIVE"] = "Active Learning";
    SeatingType["UNKNOWN"] = "Unknown";
})(SeatingType = exports.SeatingType || (exports.SeatingType = {}));
var TechType;
(function (TechType) {
    TechType["FULL"] = "Full Hi-Tech";
    TechType["BASIC"] = "Basic Hi-Tech";
    TechType["UNKNOWN"] = "Unknown";
})(TechType = exports.TechType || (exports.TechType = {}));
var BoardType;
(function (BoardType) {
    BoardType["NONE"] = "None";
    BoardType["WHITEBOARD"] = "Whiteboard";
    BoardType["CHALKBOARD"] = "Chalkboard";
    BoardType["UNKNOWN"] = "Unknown";
})(BoardType = exports.BoardType || (exports.BoardType = {}));
var LectureCaptureType;
(function (LectureCaptureType) {
    LectureCaptureType["ALL"] = "All";
    LectureCaptureType["NONE"] = "None";
    LectureCaptureType["SELF_SERVICE_RECORDING"] = "Self Service Recording";
})(LectureCaptureType = exports.LectureCaptureType || (exports.LectureCaptureType = {}));
var SearchParts;
(function (SearchParts) {
    SearchParts[SearchParts["SECTIONS"] = 0] = "SECTIONS";
    SearchParts[SearchParts["PROFESSORS"] = 1] = "PROFESSORS";
})(SearchParts = exports.SearchParts || (exports.SearchParts = {}));
//# sourceMappingURL=types.js.map